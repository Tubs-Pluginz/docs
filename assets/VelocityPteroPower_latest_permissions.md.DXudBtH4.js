import{_ as s,c as o,o as t,ag as i}from"./chunks/framework.BDwTZuFy.js";const g=JSON.parse('{"title":"VPP permission","description":"","frontmatter":{"title":"VPP permission"},"headers":[],"relativePath":"VelocityPteroPower/latest/permissions.md","filePath":"VelocityPteroPower/latest/permissions.md"}'),r={name:"VelocityPteroPower/latest/permissions.md"};function l(n,e,a,c,p,d){return t(),o("div",null,e[0]||(e[0]=[i('<h1 id="permissions-reference-ðŸ”‘" tabindex="-1">Permissions Reference ðŸ”‘ <a class="header-anchor" href="#permissions-reference-ðŸ”‘" aria-label="Permalink to &quot;Permissions Reference ðŸ”‘&quot;">â€‹</a></h1><p>VelocityPteroPower utilizes a set of permission nodes to grant access to its commands and special functionalities. You&#39;ll need a Velocity-compatible permissions plugin (like LuckPerms) to assign these to your players or staff groups.</p><h2 id="command-permissions" tabindex="-1">Command Permissions <a class="header-anchor" href="#command-permissions" aria-label="Permalink to &quot;Command Permissions&quot;">â€‹</a></h2><p>These permissions grant access to specific <code>/ptero</code> (or <code>/vpp</code>) sub-commands:</p><ul><li><p><code>ptero.start</code></p><ul><li><strong>Allows:</strong> Using the <code>/ptero start &lt;serverName&gt;</code> command.</li><li><strong>Purpose:</strong> Enables manual starting of managed servers.</li></ul></li><li><p><code>ptero.stop</code></p><ul><li><strong>Allows:</strong> Using the <code>/ptero stop &lt;serverName&gt;</code> command.</li><li><strong>Purpose:</strong> Enables manual stopping (graceful shutdown) of managed servers.</li></ul></li><li><p><code>ptero.restart</code></p><ul><li><strong>Allows:</strong> Using the <code>/ptero restart &lt;serverName&gt;</code> command.</li><li><strong>Purpose:</strong> Enables manual restarting of managed servers.</li></ul></li><li><p><code>ptero.stopIdle</code></p><ul><li><strong>Allows:</strong> Using the <code>/ptero stopidle</code> command.</li><li><strong>Purpose:</strong> Enables manual triggering of a shutdown for all eligible empty servers (respecting <code>stopIdleIgnore</code> list).</li></ul></li><li><p><code>ptero.forcestopall</code></p><ul><li><strong>Allows:</strong> Using the <code>/ptero forcestopall</code> command (and its <code>confirm</code> argument).</li><li><strong>Purpose:</strong> Enables manual triggering of a shutdown for ALL managed servers.<div class="danger custom-block"><p class="custom-block-title">High Privilege</p><p>This is a powerful permission. Grant it only to trusted administrators due to its potential to disrupt all managed servers.</p></div></li></ul></li><li><p><code>ptero.whitelistReload</code></p><ul><li><strong>Allows:</strong> Using the <code>/ptero whitelistReload</code> command.</li><li><strong>Purpose:</strong> Enables forcing an immediate update of server whitelists from the panel.<div class="warning custom-block"><p class="custom-block-title">Panel Limitation</p><p>This permission is only effective if your panel supports whitelist fetching (Pterodactyl/Pelican). It has no effect with MC Server Soft.</p></div></li></ul></li><li><p><code>ptero.reload</code></p><ul><li><strong>Allows:</strong> Using the <code>/ptero reload</code> command.</li><li><strong>Purpose:</strong> Enables reloading of VPP&#39;s configuration files (<code>config.yml</code>, <code>messages.yml</code>).</li></ul></li></ul><h2 id="special-permissions" tabindex="-1">Special Permissions <a class="header-anchor" href="#special-permissions" aria-label="Permalink to &quot;Special Permissions&quot;">â€‹</a></h2><ul><li><code>ptero.bypass</code><ul><li><strong>Allows:</strong> If <code>whitelistAllowBypass: true</code> is set in <code>config.yml</code>, players with this permission can bypass VPP&#39;s internal whitelist check when attempting to connect to a server that has <code>whitelist: true</code> in its per-server configuration.</li><li><strong>Purpose:</strong> Useful for administrators or testers who need to access servers without being on the formal <code>whitelist.json</code>, while still having VPP manage the server&#39;s startup. <br></li></ul></li></ul><div class="danger custom-block"><p class="custom-block-title">Backend Whitelist Still Applies</p><p>Granting <code>ptero.bypass</code> <strong>only</strong> bypasses VPP&#39;s preliminary check. The actual Minecraft server (<code>spigot.yml</code>, <code>server.properties</code>, or <code>whitelist.json</code> on the backend) will still enforce its own whitelist. If a player with <code>ptero.bypass</code> is not on the backend server&#39;s whitelist, they will be able to <em>trigger the server start</em> via VPP but will still be denied entry by the Minecraft server itself.</p></div><div class="tip custom-block"><p class="custom-block-title">Best Practices</p><ul><li>Grant permissions sparingly and only to users or groups that absolutely need them.</li><li>Regularly review who has high-privilege permissions like <code>ptero.forcestopall</code>.</li></ul></div>',9)]))}const u=s(r,[["render",l]]);export{g as __pageData,u as default};
