import{_ as o,c as t,o as i,ag as l}from"./chunks/framework.BDwTZuFy.js";const g=JSON.parse('{"title":"VPP installation","description":"","frontmatter":{"title":"VPP installation"},"headers":[],"relativePath":"VelocityPteroPower/0-9-5/installation.md","filePath":"VelocityPteroPower/0-9-5/installation.md"}'),r={name:"VelocityPteroPower/0-9-5/installation.md"};function a(n,e,s,c,d,u){return i(),t("div",null,e[0]||(e[0]=[l('<h1 id="installation-guide-ðŸš€" tabindex="-1">Installation Guide ðŸš€ <a class="header-anchor" href="#installation-guide-ðŸš€" aria-label="Permalink to &quot;Installation Guide ðŸš€&quot;">â€‹</a></h1><p>Installing VelocityPteroPower on your Velocity server is a simple process:</p><ol><li><p><strong>Download the Plugin:</strong> Obtain the latest <code>.jar</code> file for VelocityPteroPower from its official release page:</p><ul><li><a href="https://modrinth.com/plugin/velocitypteropower" target="_blank" rel="noreferrer">Modrinth (Recommended)</a></li><li><a href="https://github.com/TubYoub/VelocityPteroPower/releases" target="_blank" rel="noreferrer">GitHub Releases</a></li></ul></li><li><p><strong>Place the Plugin File:</strong> Locate your Velocity server&#39;s <code>plugins</code> folder and place the downloaded <code>VelocityPteroPower-x.y.z.jar</code> file into it.</p></li><li><p><strong>Start/Restart Your Server:</strong> Start or restart your Velocity proxy server.</p><div class="info custom-block"><p class="custom-block-title">First Launch</p><p>On its first launch, VelocityPteroPower will:</p><ul><li>Generate its main configuration file: <code>plugins/VelocityPteroPower/config.yml</code></li><li>Create a <code>messages/</code> folder with language files (e.g., <code>en_US.yml</code>, <code>de_DE.yml</code>) under <code>plugins/VelocityPteroPower/messages/</code>.</li></ul><ul><li>Note: the old single <code>messages.yml</code> file is deprecated and no longer used.</li></ul></div></li><li><p><strong>Initial Configuration:</strong> Stop your Velocity server again. Now, open the generated <code>plugins/VelocityPteroPower/config.yml</code> and configure it according to your panel details and server setup. This step is crucial for the plugin to function correctly.</p><p>Refer to the <a href="./configuration.html">Configuration Guide</a> for detailed explanations of all options. If you plan to use multiple lobbies/limbos, see the simple <a href="./lobbies-and-limbo.html">Lobbies &amp; Limbo guide</a>.</p></li><li><p><strong>Final Restart:</strong> After configuring <code>config.yml</code>, start your Velocity server one more time.</p></li></ol><div class="tip custom-block"><p class="custom-block-title">Check Your Logs!</p><p>After installation and configuration, always check your Velocity console logs for any messages from <code>[VPP]</code> or <code>VelocityPteroPower</code>. This will help you confirm if the plugin loaded correctly and if it successfully connected to your panel API.</p></div><p>That&#39;s it! VelocityPteroPower should now be installed and ready to manage your servers.</p><h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">â€‹</a></h1><ol><li>Place the VelocityPteroPower jar into your Velocity plugins folder and restart the proxy.</li><li>Edit <code>plugins/VelocityPteroPower/config.yml</code>.</li><li>Under the <code>servers:</code> section, define each managed server.</li></ol><p>Important: Always quote the <code>id</code> under each server. Example:</p><p>servers: mc-vanilla-6: id: &quot;91e62747&quot; # quoted to avoid YAML scientific-notation parsing timeout: 30 startupJoinDelay: 10 whitelist: true</p><p>If you omit the quotes (id: 91e62747), YAML may parse it as a number in scientific notation, resulting in an invalid value like <code>Infinity</code>. The plugin will warn and skip such entries.</p>',10)]))}const f=o(r,[["render",a]]);export{g as __pageData,f as default};
