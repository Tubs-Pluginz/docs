import{_ as t,c as o,o as s,ag as i}from"./chunks/framework.BDwTZuFy.js";const m=JSON.parse('{"title":"VPP commands","description":"","frontmatter":{"title":"VPP commands"},"headers":[],"relativePath":"VelocityPteroPower/latest/commands.md","filePath":"VelocityPteroPower/latest/commands.md"}'),r={name:"VelocityPteroPower/latest/commands.md"};function a(l,e,n,c,d,p){return s(),o("div",null,e[0]||(e[0]=[i('<h1 id="commands-reference-ðŸ’»" tabindex="-1">Commands Reference ðŸ’» <a class="header-anchor" href="#commands-reference-ðŸ’»" aria-label="Permalink to &quot;Commands Reference ðŸ’»&quot;">â€‹</a></h1><p>VelocityPteroPower (VPP) offers a suite of commands to manage your Pterodactyl/Pelican servers directly from the Velocity console or by in-game players with the appropriate permissions.</p><p>The base command is <code>/ptero</code>. An alias <code>/vpp</code> is also available.</p><div class="tip custom-block"><p class="custom-block-title">Case Sensitivity</p><p>Remember that server names used in commands must exactly match how they are defined in your <code>velocity.toml</code> and VPP&#39;s <code>config.yml</code>. These are often case-sensitive.</p></div><h2 id="core-commands" tabindex="-1">Core Commands <a class="header-anchor" href="#core-commands" aria-label="Permalink to &quot;Core Commands&quot;">â€‹</a></h2><h3 id="ptero-start-servername" tabindex="-1"><code>/ptero start &lt;serverName&gt;</code> <a class="header-anchor" href="#ptero-start-servername" aria-label="Permalink to &quot;`/ptero start &lt;serverName&gt;`&quot;">â€‹</a></h3><ul><li><strong>Alias:</strong> <code>/vpp start &lt;serverName&gt;</code></li><li><strong>Description:</strong> Attempts to send a &quot;start&quot; signal to the specified server via the panel API.</li><li><strong>Arguments:</strong><ul><li><code>&lt;serverName&gt;</code>: (Required) The name of the server to start.</li></ul></li><li><strong>Permission:</strong> <code>ptero.start</code></li><li><strong>Usage Example:</strong><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ptero</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> skyblock</span></span></code></pre></div></li><li><strong>Notes:</strong><ul><li>Respects player start cooldowns (see <code>playerStartCooldown</code> in config).</li><li>Checks if the server is already online or in the process of starting.</li></ul></li></ul><h3 id="ptero-stop-servername" tabindex="-1"><code>/ptero stop &lt;serverName&gt;</code> <a class="header-anchor" href="#ptero-stop-servername" aria-label="Permalink to &quot;`/ptero stop &lt;serverName&gt;`&quot;">â€‹</a></h3><ul><li><strong>Alias:</strong> <code>/vpp stop &lt;serverName&gt;</code></li><li><strong>Description:</strong> Attempts to send a &quot;stop&quot; signal (graceful shutdown) to the specified server via the panel API.</li><li><strong>Arguments:</strong><ul><li><code>&lt;serverName&gt;</code>: (Required) The name of the server to stop.</li></ul></li><li><strong>Permission:</strong> <code>ptero.stop</code></li><li><strong>Usage Example:</strong><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ptero</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> creative</span></span></code></pre></div></li></ul><h3 id="ptero-restart-servername" tabindex="-1"><code>/ptero restart &lt;serverName&gt;</code> <a class="header-anchor" href="#ptero-restart-servername" aria-label="Permalink to &quot;`/ptero restart &lt;serverName&gt;`&quot;">â€‹</a></h3><ul><li><strong>Alias:</strong> <code>/vpp restart &lt;serverName&gt;</code></li><li><strong>Description:</strong> Attempts to send a &quot;restart&quot; signal to the specified server via the panel API.</li><li><strong>Arguments:</strong><ul><li><code>&lt;serverName&gt;</code>: (Required) The name of the server to restart.</li></ul></li><li><strong>Permission:</strong> <code>ptero.restart</code></li><li><strong>Usage Example:</strong><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ptero</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> survival</span></span></code></pre></div></li></ul><h2 id="bulk-utility-commands" tabindex="-1">Bulk &amp; Utility Commands <a class="header-anchor" href="#bulk-utility-commands" aria-label="Permalink to &quot;Bulk &amp; Utility Commands&quot;">â€‹</a></h2><h3 id="ptero-stopidle" tabindex="-1"><code>/ptero stopidle</code> <a class="header-anchor" href="#ptero-stopidle" aria-label="Permalink to &quot;`/ptero stopidle`&quot;">â€‹</a></h3><ul><li><strong>Alias:</strong> <code>/vpp stopidle</code></li><li><strong>Description:</strong> Attempts to stop all currently managed servers that are detected as empty (no players connected) AND are <em>not</em> listed in the <code>stopIdleIgnore</code> section of <code>config.yml</code>.</li><li><strong>Permission:</strong> <code>ptero.stopIdle</code></li><li><strong>Notes:</strong><ul><li>Player count is checked at the moment of command execution.</li><li>This command respects API rate limits. If limits are hit, not all eligible servers may receive the stop signal in one go.</li></ul></li></ul><h3 id="ptero-forcestopall-confirm" tabindex="-1"><code>/ptero forcestopall [confirm]</code> <a class="header-anchor" href="#ptero-forcestopall-confirm" aria-label="Permalink to &quot;`/ptero forcestopall [confirm]`&quot;">â€‹</a></h3><ul><li><strong>Alias:</strong> <code>/vpp forcestopall [confirm]</code></li><li><strong>Description:</strong><div class="danger custom-block"><p class="custom-block-title">Extreme Caution Advised!</p><p>This command attempts to send a &quot;stop&quot; signal to <strong>ALL</strong> servers managed by VPP, irrespective of player counts or the <code>stopIdleIgnore</code> list. Use with extreme care as it can be highly disruptive.</p></div></li><li><strong>Permission:</strong> <code>ptero.forcestopall</code></li><li><strong>Confirmation Protocol:</strong><ul><li><strong>Players:</strong><ol><li>Execute <code>/ptero forcestopall</code>. You will receive a warning and instructions.</li><li>Execute <code>/ptero forcestopall confirm</code> within 30 seconds to proceed.</li></ol></li><li><strong>Console:</strong> Confirmation is bypassed when run from the console.</li></ul></li><li><strong>Notes:</strong> Also respects API rate limits.</li></ul><h3 id="ptero-whitelistreload" tabindex="-1"><code>/ptero whitelistReload</code> <a class="header-anchor" href="#ptero-whitelistreload" aria-label="Permalink to &quot;`/ptero whitelistReload`&quot;">â€‹</a></h3><ul><li><strong>Alias:</strong> <code>/vpp whitelistReload</code></li><li><strong>Description:</strong> Forces an immediate re-fetch and update of the <code>whitelist.json</code> file for all servers configured with <code>whitelist: true</code>.</li><li><strong>Permission:</strong> <code>ptero.whitelistReload</code><div class="warning custom-block"><p class="custom-block-title">MC Server Soft Incompatibility</p><p>This command (and the whitelist feature it manages) is <strong>not supported</strong> if your panel is MC Server Soft, as VPP cannot fetch files from it.</p></div></li></ul><h3 id="ptero-reload" tabindex="-1"><code>/ptero reload</code> <a class="header-anchor" href="#ptero-reload" aria-label="Permalink to &quot;`/ptero reload`&quot;">â€‹</a></h3><ul><li><strong>Alias:</strong> <code>/vpp reload</code></li><li><strong>Description:</strong> Reloads VPP&#39;s <code>config.yml</code> and <code>messages.yml</code> files. This allows most configuration changes to be applied without a full Velocity proxy restart.</li><li><strong>Permission:</strong> <code>ptero.reload</code></li><li><strong>Notes:</strong><ul><li>Some settings, like <code>apiThreads</code>, will still need a full proxy restart to take effect.</li><li>The panel API client will be re-initialized if <code>pterodactyl.url</code>, <code>pterodactyl.apiKey</code>, or the detected panel type changes upon reload.</li></ul></li></ul><h3 id="ptero-help" tabindex="-1"><code>/ptero help</code> <a class="header-anchor" href="#ptero-help" aria-label="Permalink to &quot;`/ptero help`&quot;">â€‹</a></h3><ul><li><strong>Alias:</strong> <code>/vpp help</code></li><li><strong>Description:</strong> Displays a summary of available VPP commands and their basic usage.</li><li><strong>Permission:</strong> None required by default.</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p><strong>Using Commands:</strong> Replace <code>&lt;serverName&gt;</code> with the exact name of the server as it is defined in your Velocity <code>velocity.toml</code> and in the <code>servers</code> section of the VelocityPteroPower <code>config.yml</code>. Command and server names are typically case-sensitive.</p></div>',23)]))}const g=t(r,[["render",a]]);export{m as __pageData,g as default};
