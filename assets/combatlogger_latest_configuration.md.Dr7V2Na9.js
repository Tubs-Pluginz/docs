import{_ as a,c as i,o as s,ag as t}from"./chunks/framework.BDwTZuFy.js";const g=JSON.parse('{"title":"Configuration Guide ⚙️","description":"","frontmatter":{},"headers":[],"relativePath":"combatlogger/latest/configuration.md","filePath":"combatlogger/latest/configuration.md"}'),o={name:"combatlogger/latest/configuration.md"};function n(l,e,r,c,d,h){return s(),i("div",null,e[0]||(e[0]=[t(`<h1 id="configuration-guide-⚙️" tabindex="-1">Configuration Guide ⚙️ <a class="header-anchor" href="#configuration-guide-⚙️" aria-label="Permalink to &quot;Configuration Guide ⚙️&quot;">​</a></h1><p>BT&#39;s CombatLogger uses a simple <code>config.yml</code> file, located in the <code>plugins/CombatLogger/</code> folder. This file is generated with default values when the plugin first loads.</p><div class="tip custom-block"><p class="custom-block-title">Backup Your Config!</p><p>It&#39;s always a good idea to back up <code>config.yml</code> before making changes.</p></div><p>Here&#39;s a breakdown of each option:</p><hr><h3 id="fileversion" tabindex="-1"><code>fileversion</code> <a class="header-anchor" href="#fileversion" aria-label="Permalink to &quot;\`fileversion\`&quot;">​</a></h3><ul><li><strong>Description:</strong> An internal version number for the configuration file. The plugin uses this to manage potential automatic updates to the config structure in future plugin versions.</li><li><strong>Action:</strong> <strong>Do not change this value manually.</strong></li><li><strong>Default:</strong> <code>1</code></li></ul><hr><h3 id="checkversion" tabindex="-1"><code>checkVersion</code> <a class="header-anchor" href="#checkversion" aria-label="Permalink to &quot;\`checkVersion\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If set to <code>true</code>, the plugin will check Modrinth for new versions of BT&#39;s CombatLogger when the server starts. If an update is available, a notification will be logged to the console.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>true</code></li><li><strong>Example:</strong> <code>checkVersion: true</code></li></ul><hr><h3 id="combattimeout" tabindex="-1"><code>combatTimeout</code> <a class="header-anchor" href="#combattimeout" aria-label="Permalink to &quot;\`combatTimeout\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The duration (in seconds) that a player will remain tagged as &quot;in combat&quot; after their last combat action (dealing or receiving damage from another non-allied player). If a player logs out during this period, they will be penalized.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default:</strong> <code>30</code></li><li><strong>Example:</strong> <code>combatTimeout: 60</code> (for a 1-minute combat tag)<div class="tip custom-block"><p class="custom-block-title">Setting the Timeout</p><p>A shorter timeout is less restrictive but might allow players to escape combat more easily. A longer timeout is more punitive but might frustrate players tagged for extended periods after a brief engagement. Choose a value that suits your server&#39;s PvP style.</p></div></li></ul><hr><details class="details custom-block"><summary>Example <code>config.yml</code></summary><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#          CombatLogger        #</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#         by BT Pluginz        #</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DO NOT TOUCH THIS VALUE</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">fileversion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If the Plugin should check for new Versions</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">checkVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How Long Players should be in Combat (in seconds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: 30</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">combatTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span></span></code></pre></div></details><h3 id="ally-data-allies-yml" tabindex="-1">Ally Data (<code>allies.yml</code>) <a class="header-anchor" href="#ally-data-allies-yml" aria-label="Permalink to &quot;Ally Data (\`allies.yml\`)&quot;">​</a></h3><p>In addition to <code>config.yml</code>, BT&#39;s CombatLogger uses <code>plugins/CombatLogger/allies.yml</code> to store player alliances. This file is managed automatically by the plugin when players use the <code>/cl ally</code> commands. You generally do not need to edit this file manually.</p>`,17)]))}const u=a(o,[["render",n]]);export{g as __pageData,u as default};
