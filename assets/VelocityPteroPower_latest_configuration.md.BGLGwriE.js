import{_ as i,c as e,o as a,ag as n}from"./chunks/framework.BDwTZuFy.js";const k=JSON.parse('{"title":"VPP config","description":"","frontmatter":{"title":"VPP config","sidebar":true},"headers":[],"relativePath":"VelocityPteroPower/latest/configuration.md","filePath":"VelocityPteroPower/latest/configuration.md"}'),l={name:"VelocityPteroPower/latest/configuration.md"};function t(o,s,r,h,p,d){return a(),e("div",null,s[0]||(s[0]=[n(`<h1 id="configuration-guide-⚙️" tabindex="-1">Configuration Guide ⚙️ <a class="header-anchor" href="#configuration-guide-⚙️" aria-label="Permalink to &quot;Configuration Guide ⚙️&quot;">​</a></h1><p>The main configuration for VelocityPteroPower is located in the <code>config.yml</code> file within the <code>plugins/VelocityPteroPower/</code> folder. This file is automatically generated with default values the first time you run the plugin.</p><div class="tip custom-block"><p class="custom-block-title">Always Backup!</p><p>Before making significant changes to your configuration, it&#39;s always a good practice to create a backup of your <code>config.yml</code> file.</p></div><p>This guide explains each configuration option available.</p><hr><h2 id="general-settings" tabindex="-1">General Settings <a class="header-anchor" href="#general-settings" aria-label="Permalink to &quot;General Settings&quot;">​</a></h2><h3 id="fileversion" tabindex="-1"><code>fileversion</code> <a class="header-anchor" href="#fileversion" aria-label="Permalink to &quot;\`fileversion\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Internal version number for the configuration file. This is used by the plugin to automatically manage updates to the config structure between plugin versions.</li><li><strong>Action:</strong> <strong>Do not change this value manually.</strong></li><li><strong>Default:</strong> (Automatically set by the plugin, e.g., <code>8</code>)</li></ul><h3 id="checkupdate" tabindex="-1"><code>checkUpdate</code> <a class="header-anchor" href="#checkupdate" aria-label="Permalink to &quot;\`checkUpdate\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>true</code>, the plugin will check for new versions of VelocityPteroPower on startup. If an update is found, a message will be displayed in the console.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>true</code></li><li><strong>Example:</strong> <code>checkUpdate: true</code></li></ul><h3 id="loggerlevel" tabindex="-1"><code>loggerLevel</code> <a class="header-anchor" href="#loggerlevel" aria-label="Permalink to &quot;\`loggerLevel\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Controls the verbosity of messages logged by VelocityPteroPower to the Velocity console.</li><li><strong>Type:</strong> <code>Integer</code></li><li><strong>Accepted Values:</strong><ul><li><code>10</code>: DEBUG (Most detailed information, useful for troubleshooting issues)</li><li><code>20</code>: INFO (Standard operational messages, recommended for production)</li><li><code>30</code>: WARNING (Potential issues or non-critical errors)</li><li><code>40</code>: ERROR (Critical errors that may impair functionality)</li></ul></li><li><strong>Default:</strong> <code>20</code></li><li><strong>Example:</strong> <code>loggerLevel: 20</code><div class="tip custom-block"><p class="custom-block-title">For Troubleshooting</p><p>When reporting issues, setting <code>loggerLevel: 10</code> can provide valuable diagnostic information. Remember to set it back to <code>20</code> for normal operation to avoid excessive console spam.</p></div></li></ul><h3 id="apithreads" tabindex="-1"><code>apiThreads</code> <a class="header-anchor" href="#apithreads" aria-label="Permalink to &quot;\`apiThreads\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Threads for the plugin&#39;s HTTP/API executor. VPP auto-scales the pool to roughly <code>2 x (number of managed servers)</code>, clamped to a minimum of <code>4</code> and a maximum of <code>64</code>. If you set <code>apiThreads</code> higher than this auto baseline, your configured value overrides the baseline and will be used instead.</li><li><strong>Type:</strong> <code>Integer</code></li><li><strong>Default:</strong> <code>10</code></li><li><strong>Action:</strong> Requires a reload/restart to take effect.</li><li><strong>Formula:</strong> <code>baseline = clamp(servers * 2, 4, 64)</code>; <code>final = max(apiThreads, baseline)</code></li><li><strong>Examples:</strong><ul><li>3 servers → baseline <code>6</code> → final uses <code>max(apiThreads, 6)</code></li><li>20 servers → baseline <code>40</code> → final uses <code>max(apiThreads, 40)</code></li><li>40 servers → baseline <code>64</code> (clamped) → final uses <code>max(apiThreads, 64)</code></li><li>You set <code>apiThreads: 100</code> → final <code>100</code> (overrides baseline)</li></ul></li><li><strong>Command:</strong> Use <code>/ptero apithreads</code> (permission: <code>ptero.info</code>) to display the configured value, server count, baseline, and the value currently in use.</li></ul><h3 id="printratelimit" tabindex="-1"><code>printRateLimit</code> <a class="header-anchor" href="#printratelimit" aria-label="Permalink to &quot;\`printRateLimit\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>true</code>, the plugin will log information about the current API rate limit status (limit, remaining requests) received from the panel after API calls. This is useful for diagnosing if API rate limiting is affecting the plugin&#39;s operation.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>false</code></li><li><strong>Example:</strong> <code>printRateLimit: false</code></li></ul><h3 id="languageoverride" tabindex="-1"><code>languageOverride</code> <a class="header-anchor" href="#languageoverride" aria-label="Permalink to &quot;\`languageOverride\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Override the language used for plugin messages. Set to a locale like <code>&quot;en_US&quot;</code> or <code>&quot;de_DE&quot;</code> to force a specific language. Use <code>&quot;auto&quot;</code> to follow the environment (system/Velocity) language.</li><li><strong>Type:</strong> <code>String</code></li><li><strong>Default:</strong> <code>auto</code></li><li><strong>Example:</strong> <code>languageOverride: en_US</code></li><li><strong>Notes:</strong> Message files are stored under <code>plugins/VelocityPteroPower/messages/&lt;lang&gt;.yml</code>. A legacy single <code>messages.yml</code> file is no longer used.</li></ul><hr><h2 id="server-status-behavior" tabindex="-1">Server Status &amp; Behavior <a class="header-anchor" href="#server-status-behavior" aria-label="Permalink to &quot;Server Status &amp; Behavior&quot;">​</a></h2><h3 id="serverstatuscheckmethod" tabindex="-1"><code>serverStatusCheckMethod</code> <a class="header-anchor" href="#serverstatuscheckmethod" aria-label="Permalink to &quot;\`serverStatusCheckMethod\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Determines how VPP checks if a managed Minecraft server is online and ready.</li><li><strong>Type:</strong> <code>String</code></li><li><strong>Accepted Values:</strong><ul><li><code>&quot;VELOCITY_PING&quot;</code>: Uses Velocity&#39;s built-in server pinging mechanism. <ul><li><strong>Pros:</strong> Less resource-intensive on the panel API; doesn&#39;t consume API rate limit quotas.</li><li><strong>Cons:</strong> Requires the server to be correctly registered in <code>velocity.toml</code> and network-accessible from the proxy. Might report a server as &quot;online&quot; slightly before it&#39;s fully joinable (e.g., before all backend plugins load). Some very minimal limbo servers might not respond to pings correctly.</li></ul></li><li><code>&quot;PANEL_API&quot;</code>: Directly queries the Pterodactyl/Pelican/MC Server Soft panel API for the server&#39;s current state (e.g., &quot;running&quot;, &quot;offline&quot;). <ul><li><strong>Pros:</strong> Generally more accurate regarding the <em>actual</em> state of the server process as reported by the panel.</li><li><strong>Cons:</strong> Uses an API request for each check, contributing to rate limit usage. Can be slightly slower due to API call latency.</li></ul></li></ul></li><li><strong>Default:</strong> <code>&quot;VELOCITY_PING&quot;</code></li><li><strong>Example:</strong> <code>serverStatusCheckMethod: &quot;VELOCITY_PING&quot;</code></li></ul><h3 id="pingtimeout" tabindex="-1"><code>pingTimeout</code> <a class="header-anchor" href="#pingtimeout" aria-label="Permalink to &quot;\`pingTimeout\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>serverStatusCheckMethod</code> is set to <code>&quot;VELOCITY_PING&quot;</code>, this is the maximum time (in milliseconds) VPP will wait for a ping response from a backend server before considering it offline or unreachable.</li><li><strong>Type:</strong> <code>Integer</code> (milliseconds)</li><li><strong>Default:</strong> <code>1000</code> (1 second)</li><li><strong>Example:</strong> <code>pingTimeout: 1000</code></li></ul><h3 id="shutdownretries" tabindex="-1"><code>shutdownRetries</code> <a class="header-anchor" href="#shutdownretries" aria-label="Permalink to &quot;\`shutdownRetries\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If VPP sends a &quot;stop&quot; signal to a server and the server doesn&#39;t appear to shut down (based on subsequent status checks), VPP will retry sending the &quot;stop&quot; signal this many times.</li><li><strong>Type:</strong> <code>Integer</code></li><li><strong>Default:</strong> <code>3</code></li><li><strong>Example:</strong> <code>shutdownRetries: 3</code></li></ul><h3 id="shutdownretrydelay" tabindex="-1"><code>shutdownRetryDelay</code> <a class="header-anchor" href="#shutdownretrydelay" aria-label="Permalink to &quot;\`shutdownRetryDelay\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The time (in seconds) VPP will wait between failed shutdown attempts before retrying.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default:</strong> <code>300</code> (5 minutes)</li><li><strong>Example:</strong> <code>shutdownRetryDelay: 300</code></li></ul><h3 id="idlestartshutdowntime" tabindex="-1"><code>idleStartShutdownTime</code> <a class="header-anchor" href="#idlestartshutdowntime" aria-label="Permalink to &quot;\`idleStartShutdownTime\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If a server is started by VPP (either by a player connecting or via command) but no player successfully joins it within this duration (in seconds), VPP will automatically shut it down. This prevents servers from staying online indefinitely if they were started but never actually used.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Set to <code>-1</code> to disable this feature.</strong></li><li><strong>Default:</strong> <code>300</code> (5 minutes)</li><li><strong>Example:</strong> <code>idleStartShutdownTime: 300</code></li></ul><h3 id="playerstartcooldown" tabindex="-1"><code>playerStartCooldown</code> <a class="header-anchor" href="#playerstartcooldown" aria-label="Permalink to &quot;\`playerStartCooldown\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The cooldown period (in seconds) a player must wait before they can initiate the start of another server, does not work for the <code>/ptero start</code> command.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default:</strong> <code>10</code></li><li><strong>Example:</strong> <code>playerStartCooldown: 10</code></li></ul><h3 id="limbo-servers" tabindex="-1">Limbo servers <a class="header-anchor" href="#limbo-servers" aria-label="Permalink to &quot;Limbo servers&quot;">​</a></h3><ul><li>Use the <code>lobbyBalancer.limbos</code> list to define one or more limbo servers (by their Velocity names) where players can wait while a target server is starting.</li><li>Any previous <code>limboServer</code> setting is deprecated and will be automatically migrated to <code>lobbyBalancer.limbos</code> when the plugin loads.</li><li>Tips: <ul><li>Keep limbo servers lightweight and always accessible (or quick to start).</li><li>If a limbo is managed by VPP (listed under <code>servers:</code> with an <code>id</code>), configure its <code>timeout</code> as needed (e.g., <code>-1</code> to keep it always online).</li></ul></li></ul><h3 id="startupinitialcheckdelay" tabindex="-1"><code>startupInitialCheckDelay</code> <a class="header-anchor" href="#startupinitialcheckdelay" aria-label="Permalink to &quot;\`startupInitialCheckDelay\`&quot;">​</a></h3><ul><li><strong>Description:</strong> After VPP sends a &quot;start&quot; signal to a server, it will wait this many seconds before performing the <em>first</em> status check to see if the server has come online.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default:</strong> <code>10</code></li><li><strong>Example:</strong> <code>startupInitialCheckDelay: 10</code><div class="info custom-block"><p class="custom-block-title">Note</p><p>The per-server <code>startupJoinDelay</code> is applied <em>after</em> this initial check confirms the server is online, before a player is connected.</p></div></li></ul><h3 id="stopidleignore" tabindex="-1"><code>stopIdleIgnore</code> <a class="header-anchor" href="#stopidleignore" aria-label="Permalink to &quot;\`stopIdleIgnore\`&quot;">​</a></h3><ul><li><strong>Description:</strong> A list of server names (as defined in <code>velocity.toml</code> and VPP&#39;s <code>servers</code> section) that will be ignored by the <code>/ptero stopidle</code> command. These servers will not be shut down by this specific command even if they are empty.</li><li><strong>Type:</strong> <code>List</code> of <code>String</code></li><li><strong>Default:</strong> <code>[&quot;hub&quot;, &quot;lobby&quot;, &quot;limbo&quot;]</code></li><li><strong>Example:</strong><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">stopIdleIgnore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lobby1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lobby2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hub</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Important</p><p>This list <strong>only</strong> affects the <code>/ptero stopidle</code> command. It does <strong>not</strong> prevent automatic shutdown based on a server&#39;s <code>timeout</code> setting or the global <code>idleStartShutdownTime</code>. It also does not affect the <code>/ptero forcestopall</code> command.</p></div></li></ul><h3 id="servernotfoundmessage" tabindex="-1"><code>serverNotFoundMessage</code> <a class="header-anchor" href="#servernotfoundmessage" aria-label="Permalink to &quot;\`serverNotFoundMessage\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>true</code>, when a player attempts to connect to a server name that is registered in <code>velocity.toml</code> but <em>not</em> configured in VPP&#39;s <code>servers</code> section, the player will receive a &quot;server not found in configuration&quot; message. A message is always logged to the console regardless of this setting.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>false</code></li><li><strong>Example:</strong> <code>serverNotFoundMessage: false</code></li></ul><h3 id="maxonlineservers" tabindex="-1"><code>maxOnlineServers</code> <a class="header-anchor" href="#maxonlineservers" aria-label="Permalink to &quot;\`maxOnlineServers\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Limits how many managed servers may be online concurrently. <code>0</code> means unlimited.</li><li><strong>Type:</strong> <code>Integer</code></li><li><strong>Default:</strong> <code>0</code></li><li><strong>Example:</strong> <code>maxOnlineServers: 3</code></li></ul><h3 id="maxonlineallowbypass" tabindex="-1"><code>maxOnlineAllowBypass</code> <a class="header-anchor" href="#maxonlineallowbypass" aria-label="Permalink to &quot;\`maxOnlineAllowBypass\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>true</code>, players with the <code>ptero.maxcap.bypass</code> permission can bypass the <code>maxOnlineServers</code> cap.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>true</code></li><li><strong>Example:</strong> <code>maxOnlineAllowBypass: true</code></li></ul><h3 id="maxonlineexempt" tabindex="-1"><code>maxOnlineExempt</code> <a class="header-anchor" href="#maxonlineexempt" aria-label="Permalink to &quot;\`maxOnlineExempt\`&quot;">​</a></h3><ul><li><strong>Description:</strong> A list of server names that are exempt from the <code>maxOnlineServers</code> cap.</li><li><strong>Type:</strong> <code>List</code> of <code>String</code></li><li><strong>Default:</strong> <code>[&quot;hub&quot;, &quot;lobby&quot;, &quot;limbo&quot;]</code></li><li><strong>Example:</strong><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">maxOnlineExempt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hub</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lobby</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">limbo</span></span></code></pre></div></li></ul><h3 id="countlobbiesinmaxonline" tabindex="-1"><code>countLobbiesInMaxOnline</code> <a class="header-anchor" href="#countlobbiesinmaxonline" aria-label="Permalink to &quot;\`countLobbiesInMaxOnline\`&quot;">​</a></h3><ul><li>Description: If true, lobbies defined under lobbyBalancer.lobbies are counted toward the global maxOnlineServers cap. If false, those lobbies are excluded automatically when enforcing the cap.</li><li>Type: Boolean</li><li>Default: false</li><li>Notes: Only managed servers (listed under servers:) are counted by the cap at all. If lobbiesToUse &gt; 0, only the first N lobbies are affected by this setting.</li></ul><h3 id="countlimbosinmaxonline" tabindex="-1"><code>countLimbosInMaxOnline</code> <a class="header-anchor" href="#countlimbosinmaxonline" aria-label="Permalink to &quot;\`countLimbosInMaxOnline\`&quot;">​</a></h3><ul><li>Description: If true, limbos (from <code>lobbyBalancer.limbos</code>) are counted toward <code>maxOnlineServers</code>. If false, they are excluded automatically when enforcing the cap.</li><li>Type: Boolean</li><li>Default: false</li></ul><h3 id="alwaysonline" tabindex="-1"><code>alwaysOnline</code> <a class="header-anchor" href="#alwaysonline" aria-label="Permalink to &quot;\`alwaysOnline\`&quot;">​</a></h3><ul><li><strong>Description:</strong> A list of server names that VPP should keep online at all times. The plugin will periodically check and start them if offline. This setting <strong>outranks</strong> per-server <code>timeout</code>, i.e., such servers will not be auto-shutdown.</li><li><strong>Type:</strong> <code>List</code> of <code>String</code></li><li><strong>Default:</strong> <code>[&quot;limbo&quot;]</code></li><li><strong>Example:</strong><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">alwaysOnline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">limbo</span></span></code></pre></div></li></ul><h3 id="alwaysonlinecheckinterval" tabindex="-1"><code>alwaysOnlineCheckInterval</code> <a class="header-anchor" href="#alwaysonlinecheckinterval" aria-label="Permalink to &quot;\`alwaysOnlineCheckInterval\`&quot;">​</a></h3><ul><li><strong>Description:</strong> How often to check/enforce the <code>alwaysOnline</code> list (in seconds).</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default:</strong> <code>60</code></li><li><strong>Example:</strong> <code>alwaysOnlineCheckInterval: 60</code></li></ul><h3 id="resourcecacheseconds" tabindex="-1"><code>resourceCacheSeconds</code> <a class="header-anchor" href="#resourcecacheseconds" aria-label="Permalink to &quot;\`resourceCacheSeconds\`&quot;">​</a></h3><ul><li><strong>Description:</strong> How long to cache resource usage responses from the panel (in seconds). Set to <code>0</code> to disable caching.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default:</strong> <code>10</code></li><li><strong>Example:</strong> <code>resourceCacheSeconds: 10</code></li></ul><h3 id="resourceprefetchenabled" tabindex="-1"><code>resourcePrefetchEnabled</code> <a class="header-anchor" href="#resourceprefetchenabled" aria-label="Permalink to &quot;\`resourcePrefetchEnabled\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>true</code>, VPP will periodically prefetch resource usage for all managed servers every <code>resourceCacheSeconds</code>, keeping the cache warm so commands like <code>/ptero list</code> and <code>/ptero info</code> feel snappy.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>true</code></li><li><strong>Example:</strong> <code>resourcePrefetchEnabled: true</code></li></ul><h3 id="idleshutdowncheckinterval" tabindex="-1"><code>idleShutdownCheckInterval</code> <a class="header-anchor" href="#idleshutdowncheckinterval" aria-label="Permalink to &quot;\`idleShutdownCheckInterval\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Periodic failsafe sweep interval (in seconds). VPP scans all managed servers and schedules idle shutdowns for empty ones (respecting <code>alwaysOnline</code>, per-server <code>timeout</code>, and only when the server is online). Set to <code>0</code> or a negative number to disable.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default:</strong> <code>60</code></li><li><strong>Example:</strong> <code>idleShutdownCheckInterval: 60</code></li></ul><h3 id="lifecycle" tabindex="-1">Lifecycle <a class="header-anchor" href="#lifecycle" aria-label="Permalink to &quot;Lifecycle&quot;">​</a></h3><h4 id="lifecycle-shutdownonproxyexit" tabindex="-1"><code>lifecycle.shutdownOnProxyExit</code> <a class="header-anchor" href="#lifecycle-shutdownonproxyexit" aria-label="Permalink to &quot;\`lifecycle.shutdownOnProxyExit\`&quot;">​</a></h4><ul><li><strong>Description:</strong> Defines which servers should be force-stopped when the Velocity proxy shuts down. This setting overrides <code>alwaysOnline</code> during shutdown.</li><li><strong>Type:</strong> <code>List</code> of <code>String</code></li><li><strong>Accepted values:</strong><ul><li><code>all</code> — stop all managed servers</li><li>or a list of specific server names to stop</li></ul></li><li><strong>Default:</strong> disabled (empty list)</li><li><strong>Example:</strong><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">lifecycle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  shutdownOnProxyExit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lobby</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">survival</span></span></code></pre></div>or to stop everything:<div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">lifecycle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  shutdownOnProxyExit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">all</span></span></code></pre></div></li></ul><div class="info custom-block"><p class="custom-block-title">Always-online on startup</p><p>Servers listed in <code>alwaysOnline</code> will be started automatically on proxy startup (once) and then kept online by periodic maintenance.</p></div><hr><h2 id="whitelist-settings" tabindex="-1">Whitelist Settings <a class="header-anchor" href="#whitelist-settings" aria-label="Permalink to &quot;Whitelist Settings&quot;">​</a></h2><h3 id="whitelistallowbypass" tabindex="-1"><code>whitelistAllowBypass</code> <a class="header-anchor" href="#whitelistallowbypass" aria-label="Permalink to &quot;\`whitelistAllowBypass\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>true</code>, players with the <code>ptero.bypass</code> permission can bypass VPP&#39;s whitelist check when attempting to start/connect to a server that has <code>whitelist: true</code> in its per-server configuration.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>true</code></li><li><strong>Example:</strong> <code>whitelistAllowBypass: true</code><div class="danger custom-block"><p class="custom-block-title">Important Distinction</p><p>This setting only bypasses VPP&#39;s <em>pre-connection check</em>. It does <strong>not</strong> allow players to bypass the actual <code>whitelist.json</code> enforced by the backend Minecraft server itself. If a player bypasses VPP&#39;s check but is not on the backend server&#39;s whitelist, they will still be unable to join.</p></div></li></ul><h3 id="whitelistcheckinterval" tabindex="-1"><code>whitelistCheckInterval</code> <a class="header-anchor" href="#whitelistcheckinterval" aria-label="Permalink to &quot;\`whitelistCheckInterval\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The interval (in minutes) at which VPP will periodically attempt to re-fetch the <code>whitelist.json</code> file from servers that have <code>whitelist: true</code> configured. This helps keep VPP&#39;s internal whitelist cache up-to-date.</li><li><strong>Type:</strong> <code>Integer</code> (minutes)</li><li><strong>Set to <code>0</code> or a negative value to disable periodic automatic updates.</strong> Whitelists will still be fetched on plugin load/reload and via <code>/ptero whitelistReload</code>.</li><li><strong>Default:</strong> <code>10</code></li><li><strong>Example:</strong> <code>whitelistCheckInterval: 10</code><div class="warning custom-block"><p class="custom-block-title">MC Server Soft Limitation</p><p>The whitelist fetching feature (and thus this interval) is <strong>not supported</strong> if your panel is MC Server Soft due to API differences.</p></div></li></ul><hr><h2 id="panel-connection-pterodactyl" tabindex="-1">Panel Connection (<code>pterodactyl</code>) <a class="header-anchor" href="#panel-connection-pterodactyl" aria-label="Permalink to &quot;Panel Connection (\`pterodactyl\`)&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This section of the config is still named <code>pterodactyl</code> for compatibility reasons, even if you are using Pelican or MC Server Soft. The plugin will automatically detect the panel type based on the API key format.</p></div><p>This section contains the crucial details for connecting to your panel url.</p><h3 id="pterodactyl-url" tabindex="-1"><code>pterodactyl.url</code> <a class="header-anchor" href="#pterodactyl-url" aria-label="Permalink to &quot;\`pterodactyl.url\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The full base URL of your panel.</li><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> Yes</li><li><strong>Format:</strong> Must include the protocol (<code>http://</code> or <code>https://</code>). It&#39;s generally recommended to ensure it ends with a <code>/</code> if your panel requires it for API access (most do).</li><li><strong>Example:</strong> <code>url: &quot;https://panel.yourdomain.com/&quot;</code><div class="tip custom-block"><p class="custom-block-title">Cloudflare &amp; Proxies</p><p>If you are using Cloudflare, a reverse proxy, or a tunnel in front of your panel, ensure that the URL points to the accessible endpoint and that any necessary IP bypass or security rules are configured to allow VPP to reach the API.</p></div></li></ul><h3 id="pterodactyl-apikey" tabindex="-1"><code>pterodactyl.apiKey</code> <a class="header-anchor" href="#pterodactyl-apikey" aria-label="Permalink to &quot;\`pterodactyl.apiKey\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Your Client API Key for the panel.</li><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> Yes</li><li><strong>Format:</strong><ul><li>For <strong>Pterodactyl Panel</strong>: The key should start with <code>ptlc_</code>.</li><li>For <strong>Pelican Panel</strong>: The key should start with <code>pacc</code>.</li></ul></li><li><strong>Location:</strong> You can generate/find this key in your account settings on the panel, usually under &quot;API Credentials&quot; or a similar section.</li><li><strong>Example:</strong> <code>apiKey: &quot;ptlc_YOUR_CLIENT_API_KEY_HERE&quot;</code><div class="danger custom-block"><p class="custom-block-title">Critical: Use Client API Keys Only!</p><p>You <strong>must</strong> use a <strong>Client API Key</strong>. Application API Keys (which might start with <code>ptla_</code> for Pterodactyl or <code>peli_</code> for Pelican) are <strong>NOT supported</strong> by VPP and will result in connection failures. The Client API Key grants permissions on behalf of your user account.</p><div class="info custom-block"><p class="custom-block-title">Information for MC Server Soft Users</p><p>Mc Server Soft doesnt have any kind of distinction between types of Api Keys. There is just one type.</p></div></div></li></ul><hr><h2 id="per-server-configuration-servers" tabindex="-1">Per-Server Configuration (<code>servers</code>) <a class="header-anchor" href="#per-server-configuration-servers" aria-label="Permalink to &quot;Per-Server Configuration (\`servers\`)&quot;">​</a></h2><p>This section is where you define each individual Minecraft server that VelocityPteroPower should manage. Each entry is a sub-section named after the server as it appears in your <code>velocity.toml</code>.</p><h3 id="servers-servername" tabindex="-1"><code>servers.&lt;serverName&gt;</code> <a class="header-anchor" href="#servers-servername" aria-label="Permalink to &quot;\`servers.&lt;serverName&gt;\`&quot;">​</a></h3><ul><li><p><strong>Description:</strong> This is the block for a specific server. Replace <code>&lt;serverName&gt;</code> with the actual name of your server (e.g., <code>lobby</code>, <code>survival</code>, <code>minigames</code>). This name <strong>must exactly match</strong> the server name defined in your Velocity <code>velocity.toml</code> file (case-sensitive).</p><p>Inside each <code>&lt;serverName&gt;</code> block, you define the following:</p><h4 id="id" tabindex="-1"><code>id</code> <a class="header-anchor" href="#id" aria-label="Permalink to &quot;\`id\`&quot;">​</a></h4><ul><li><strong>Description:</strong> The unique identifier of this server <em>on your panel</em>.</li><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> Yes</li><li><strong>How to find:</strong><ul><li><strong>Pterodactyl:</strong> Look at the URL when viewing the server in the panel. If the URL is <code>https://panel.example.com/server/a1b2c3d4</code>, then the ID is <code>a1b2c3d4</code>.</li><li><strong>Pelican:</strong> This is typically the &quot;Short UUID&quot; found in the server&#39;s details page on the panel.</li></ul></li><li><strong>Example:</strong> <code>id: &quot;a1b2c3d4&quot;</code></li></ul><h4 id="timeout" tabindex="-1"><code>timeout</code> <a class="header-anchor" href="#timeout" aria-label="Permalink to &quot;\`timeout\`&quot;">​</a></h4><ul><li><strong>Description:</strong> The time (in seconds) VPP will wait after the last player leaves this specific server before automatically sending a &quot;stop&quot; signal.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Set to <code>-1</code> to disable automatic shutdown for this server when it becomes empty.</strong></li><li><strong>Set to <code>0</code> to attempt to stop the server immediately after the last player leaves.</strong></li><li><strong>Default (if not specified for a server, though it&#39;s good practice to specify):</strong> The plugin might have an internal default, but explicitly set it.</li><li><strong>Example:</strong> <code>timeout: 300</code> (5 minutes)</li></ul><h4 id="startupjoindelay" tabindex="-1"><code>startupJoinDelay</code> <a class="header-anchor" href="#startupjoindelay" aria-label="Permalink to &quot;\`startupJoinDelay\`&quot;">​</a></h4><ul><li><strong>Description:</strong> After VPP detects that this server has successfully started and is &quot;online&quot; (according to <code>serverStatusCheckMethod</code>), it will wait an additional period (in seconds) defined by this value before attempting to connect waiting players to it. This delay allows backend server plugins and worlds to fully load and initialize.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default (if not specified):</strong> <code>10</code> (as seen in the example config)</li><li><strong>Example:</strong> <code>startupJoinDelay: 15</code> (wait 15 seconds after server reports online)</li></ul><h4 id="whitelist" tabindex="-1"><code>whitelist</code> <a class="header-anchor" href="#whitelist" aria-label="Permalink to &quot;\`whitelist\`&quot;">​</a></h4><ul><li><strong>Description:</strong> If <code>true</code>, VPP will attempt to fetch the <code>whitelist.json</code> file for this server from the panel and enforce it for players attempting to start or connect to this server (unless bypassed by permission).</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>false</code></li><li><strong>Example:</strong> <code>whitelist: true</code><div class="warning custom-block"><p class="custom-block-title">MC Server Soft Limitation</p><p>As mentioned previously, the whitelist fetching feature is <strong>not supported</strong> if your panel is MC Server Soft. Setting this to <code>true</code> for an MC Server Soft panel will likely result in VPP logging warnings and the whitelist check being ineffective.</p></div></li></ul></li></ul><hr><details class="details custom-block"><summary>Example <code>config.yml</code> (fileversion: 13)</summary><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">###########################################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                    VelocityPteroPower                  #</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                       by TubYoub                      #</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">###########################################################</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Version of the configuration file</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">fileversion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;13&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">checkUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Override the language used for plugin messages.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set to a locale like &quot;en_US&quot; or &quot;de_DE&quot; to force a specific language.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Use &quot;auto&quot; to follow the environment (system/Velocity) language.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: auto</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">languageOverride</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">auto</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Choose which logging level should be used</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># It depends on how much you want you&#39;re console to be filled with information from VPP</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For production you can safely set it to a higher level but for development/testing it is recommended to use a lower level</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 10 = Debug</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 20 = Info</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 30 = Warning</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 40 = Error</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#default: 20</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">loggerLevel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How many Threads should be used to check the server status</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The more threads the more requests can be handled at the same time</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># more threads = more resources used</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># restart the server so changes take effect</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: 10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiThreads</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># print updated Rate Limit from the API response to console</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">printRateLimit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Choose the method to check if a managed server is online and ready.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &quot;VELOCITY_PING&quot;: Uses Velocity&#39;s built-in ping functionality. Requires the server</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                  to be registered in Velocity&#39;s config and accessible from the proxy.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                  Less resource-intensive, doesn&#39;t use API rate limits. Might report</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                  online slightly before the server is fully joinable.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                  Some simple Limbo servers might not report any Ping back suing this method.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &quot;PANEL_API&quot;: Uses the Pterodactyl/Pelican panel API to check the server&#39;s state.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                    More accurate for actual server state (&quot;running&quot;), but uses API</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                    requests and counts towards rate limits.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Default: &quot;VELOCITY_PING&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">serverStatusCheckMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PANEL_API</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How long the ping to the server lasts, to check if its is online, until it times out (in milliseconds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: 1000</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pingTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How many retrys to shut down the server if the previous one failed</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: 3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">shutdownRetries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How long to wait before retrying to shut down the server (in seconds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: 30</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">shutdownRetryDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How long to wait before shutting down the server if no player joined the server(in seconds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: 300</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -1 = disabled</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">idleStartShutdownTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How long to wait before allowing a player to start a server again (in seconds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: 10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">playerStartCooldown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How long (in seconds) the plugin should wait for the first check if the server is online</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The joinDelay (configured for each server) is still applied when the server is online before a</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># player is automatically connected (so it doesn&#39;t affect this)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Maybe consider changing this to a lower value if you have for example a</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># limbo which is lightweight and starts fast</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: 10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">startupInitialCheckDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Servers to ignore when the stopIdle command is used</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># THIS DOES NOT AFFECT forceStop</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">stopIdleIgnore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hub</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">limbo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If a player should receive a message when a server is not found in the config</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># message will always be send to console</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">serverNotFoundMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Allow players with the permission &quot;ptero.bypass&quot; to bypass the whitelist when starting a server.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This does not work to get around a whitelist because it is enforced by the backend server itself.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">whitelistAllowBypass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How long (in minutes) VPP should wait in between checks for a new whitelist and enforce it (if enabled)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: 10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">whitelistCheckInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Limit how many managed servers may be online concurrently. 0 = unlimited</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default = 0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">maxOnlineServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Allow players with the permission &quot;ptero.maxcap.bypass&quot; to bypass the maxOnlineServers cap when starting servers.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">maxOnlineAllowBypass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Servers excluded from the above cap (by Velocity server name)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">maxOnlineExempt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hub</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">limbo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Whether to include lobbyBalancer lobbies in the maxOnlineServers count</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">countLobbiesInMaxOnline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Whether to include lobbyBalancer limbos in the maxOnlineServers count</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default: false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">countLimbosInMaxOnline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Servers that should always be kept online. The plugin will periodically check and start them if offline.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">alwaysOnline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hub</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">limbo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How often to check/enforce the alwaysOnline list (in seconds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default = 60</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">alwaysOnlineCheckInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Resource usage caching for panel queries</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How long to cache resource usage responses (in seconds). Set to 0 to disable caching.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default = 10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">resourceCacheSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If enabled, the plugin will periodically prefetch resource usage for all managed servers</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># every &#39;resourceCacheSeconds&#39; to keep the cache warm and make commands snappy.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default = true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">resourcePrefetchEnabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Automatic idle shutdown sweep (failsafe)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Periodically checks all managed servers and schedules idle shutdowns if they are empty.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This safeguards against missed events or errors preventing scheduling.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set to 0 or negative to disable.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default = 60</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">idleShutdownCheckInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Lifecycle related behavior</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">lifecycle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # When the proxy shuts down, stop these servers.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Use &quot;all&quot; to stop all managed servers, or provide a list of specific server names.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # This overrides &#39;alwaysOnline&#39; during shutdown.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  shutdownOnProxyExit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Multi-lobby/limbo balancer settings</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">lobbyBalancer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # A list of lobby servers to use for player transfers and first-join routing (if you route players there).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Order matters if lobbiesToUse is set; only the first N will be considered active.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  lobbies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hub</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Optional list of limbo servers to use while target servers are starting.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  limbos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">limbo</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # How many lobbies from the list above should be considered for balancing (0 = use all listed)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = 0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  lobbiesToUse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Balancer strategy: ROUND_ROBIN, LEAST_PLAYERS, or LEAST_CPU</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = ROUND_ROBIN</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ROUND_ROBIN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Periodic health check interval in seconds for verifying reachability and planning scale-ups</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = 15</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  healthCheckInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Keep at least this many lobby servers online (0 = no minimum)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = 1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  minOnline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Do not keep more than this many lobby servers online (0 = unlimited)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = 0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  maxOnline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Approximate players-per-lobby capacity used to decide when to scale up</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = 80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  playersPerServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Only used with LEAST_CPU strategy. If any lobby exceeds this CPU percent, consider scaling up</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = 85.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cpuScaleUpThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">85.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # If true, balancer will auto-start additional lobbies when needed</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  autoScaleEnabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Start another lobby before capacity is completely full.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # When total players across online lobbies reach this percent of capacity, VPP starts another lobby (if available).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = 80 (means start a new lobby at ~80% of total lobby capacity)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  preStartThresholdPercent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # If a lobby was started but doesn&#39;t come online within this many seconds, VPP will try starting a different lobby.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = 60</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  startFailureFallbackSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # After a failed start, wait this many seconds before trying that same lobby again.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = 120</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  startFailureCooldownSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # When a target server is starting, send players to a limbo (if available) and auto-queue them.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # If false, players will stay on their current server (or be disconnected if coming from proxy) while queued.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # default = false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sendToLimboOnStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Behavior for forced-host joins when the target backend is offline</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # DISCONNECT       → disconnect (default)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # LOBBY_OR_LIMBO  → try a lobby first, then a limbo; if none, disconnect</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # LIMBO_ONLY      → only try limbo; if none, disconnect</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  forcedHostOfflineBehavior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">LOBBY_OR_LIMBO</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Pterodactyl configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pterodactyl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # The URL of your pterodactyl panel</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # If you use Cloudflare Tunnel, you need to allow the ip in the bypass setting.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://panel.domain.tld/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Your API Key should start with &quot;ptlc_&quot; or &quot;pacc&quot; if you are using the Ptero or Peli Panel</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # You can find the client api key in the &quot;API Credentials&quot; tab of the &quot;Account&quot; page.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  apiKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ptlc_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Per server configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  lobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example server 1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a1b2c3d4&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Never auto-stop lobby</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    startupJoinDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    whitelist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  survival</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example server 2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;e5f6g7h8&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Stop after 10 minutes empty</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    startupJoinDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    whitelist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  minigame-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example server 3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i9j0k1l2&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Stop after 2 minutes empty</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    startupJoinDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    whitelist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div></details><hr><h2 id="multi-lobby-and-limbo-balancer" tabindex="-1">Multi-Lobby and Limbo Balancer <a class="header-anchor" href="#multi-lobby-and-limbo-balancer" aria-label="Permalink to &quot;Multi-Lobby and Limbo Balancer&quot;">​</a></h2><p>VelocityPteroPower supports multiple lobbies and limbos for player redirection and waiting rooms while target servers are starting. This feature is fully configurable via the <code>lobbyBalancer</code> section in <code>config.yml</code>.</p><h3 id="why-use-multiple-lobbies-limbos" tabindex="-1">Why use multiple lobbies/limbos? <a class="header-anchor" href="#why-use-multiple-lobbies-limbos" aria-label="Permalink to &quot;Why use multiple lobbies/limbos?&quot;">​</a></h3><ul><li>Distribute players evenly (round-robin) or intelligently (least players, least CPU)</li><li>Keep a defined number of lobbies online and auto-start more when load increases</li><li>Provide redundancy: if one lobby/limbo is offline, others can still be used</li></ul><h3 id="configuration-lobbybalancer" tabindex="-1">Configuration (<code>lobbyBalancer</code>) <a class="header-anchor" href="#configuration-lobbybalancer" aria-label="Permalink to &quot;Configuration (\`lobbyBalancer\`)&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">lobbyBalancer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # A list of lobby servers to use for player transfers and first-join routing (if you route players there).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Order matters if lobbiesToUse is set; only the first N will be considered active.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  lobbies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lobby</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hub</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Optional list of limbo servers to use while target servers are starting.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  limbos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">limbo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # How many lobbies from the list above should be considered for balancing (0 = use all listed)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  lobbiesToUse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Balancer strategy: ROUND_ROBIN, LEAST_PLAYERS, or LEAST_CPU</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ROUND_ROBIN&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Periodic health check interval in seconds for verifying reachability and planning scale-ups</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  healthCheckInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Keep at least this many lobby servers online (0 = no minimum)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  minOnline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Do not keep more than this many lobby servers online (0 = unlimited)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  maxOnline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Approximate players-per-lobby capacity used to decide when to scale up</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  playersPerServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Only used with LEAST_CPU strategy. If any lobby exceeds this CPU percent, consider scaling up</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cpuScaleUpThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">85.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # If true, balancer will auto-start additional lobbies when needed</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  autoScaleEnabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Start another lobby before capacity is completely full</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  preStartThresholdPercent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # If a lobby doesn&#39;t come online in time, try a different one</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  startFailureFallbackSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Cooldown before retrying a failed lobby</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  startFailureCooldownSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span></span></code></pre></div><h4 id="fine-tuning-optional" tabindex="-1">Fine-tuning (optional) <a class="header-anchor" href="#fine-tuning-optional" aria-label="Permalink to &quot;Fine-tuning (optional)&quot;">​</a></h4><ul><li>sendToLimboOnStart: When a target server is starting, send players to a limbo (if available) and auto-queue them to be moved once the server is ready. If false, players will remain on their current server (or be disconnected if they came from proxy) while queued. Default: false.</li><li>forcedHostOfflineBehavior: Controls what happens when a player connects via a forced host and the target backend is offline. Options: DISCONNECT (default), LOBBY_OR_LIMBO (try lobby first, then limbo), LIMBO_ONLY (only try limbo). Works independently of sendToLimboOnStart so you can keep that false but still avoid disconnects for first-join players.</li><li>preStartThresholdPercent: Start another lobby a bit earlier so players don’t pile up when you’re close to full. Example: 80 means “start new at ~80% capacity”.</li><li>startFailureFallbackSeconds: If a lobby was started but still isn’t online after this many seconds, VPP will try starting a different lobby.</li><li>startFailureCooldownSeconds: After a failed start, VPP will wait this long before trying that same lobby again.</li></ul><h3 id="how-it-works" tabindex="-1">How it works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How it works&quot;">​</a></h3><ul><li>Selection: <ul><li>Lobbies are preferred over limbos if available; otherwise a limbo is used.</li><li>Strategy determines which specific server is chosen: <ul><li>ROUND_ROBIN: cycles through available servers</li><li>LEAST_PLAYERS: picks the server with the fewest connected players</li><li>LEAST_CPU: uses panel resource endpoint to choose the lowest CPU server</li></ul></li></ul></li><li>Health and scaling: <ul><li>Periodically checks reachability of configured lobbies.</li><li>Ensures at least <code>minOnline</code> lobbies are running (auto-starts if necessary).</li><li>If overall lobby capacity is &gt;90% full (players vs playersPerServer) or LEAST_CPU threshold is exceeded, auto-starts an additional lobby if possible.</li></ul></li><li>If no limbos are usable, players may be disconnected or kept where they are until the target starts.</li></ul><h3 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h3><ul><li>For auto-start/CPU-based decisions VPP can only control servers that are listed under the <code>servers:</code> section with valid panel IDs. Unmanaged servers must already be online to be considered usable.</li><li>Logging respects your global <code>loggerLevel</code>; set <code>10</code> for detailed debugging during setup.</li></ul><h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><p>Important note about server IDs under <code>servers</code>:</p><ul><li><p>Always wrap the <code>id</code> value in quotes. YAML can parse values like <code>91e62747</code> as a number in scientific notation. This may overflow to <code>Infinity</code>, causing the plugin to misread the ID.</p></li><li><p>Correct: servers: mc-vanilla-6: id: &quot;91e62747&quot;</p></li><li><p>Incorrect (will be parsed as a number): servers: mc-vanilla-6: id: 91e62747</p></li></ul><p>If the plugin reports an error like &quot;Invalid type for &#39;id&#39; ... Quote the ID in YAML&quot;, edit your config to quote the <code>id</code> and reload the plugin.</p><hr><h2 id="messages-localization" tabindex="-1">Messages &amp; Localization <a class="header-anchor" href="#messages-localization" aria-label="Permalink to &quot;Messages &amp; Localization&quot;">​</a></h2><p>VPP’s player- and console-facing texts are stored in simple YAML “message files.” This lets you translate or customize wording without changing the plugin JAR.</p><ul><li>Location on disk: plugins/VelocityPteroPower/messages/</li><li>File naming: <code>&lt;locale&gt;.yml</code> (for example en_US.yml, de_DE.yml)</li><li>Shipped locales: en_US (English), de_DE (German)</li><li>Fallbacks: If a key is missing in your selected locale, VPP falls back to en_US for that key.</li></ul><h3 id="choosing-the-language" tabindex="-1">Choosing the language <a class="header-anchor" href="#choosing-the-language" aria-label="Permalink to &quot;Choosing the language&quot;">​</a></h3><ul><li>Global override: Set languageOverride in config.yml <ul><li>auto (default): Uses the environment (Velocity/system) locale when available</li><li>en_US, de_DE, or another locale code: Forces that language for all messages</li></ul></li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># In config.yml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">languageOverride</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">auto</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # or &quot;en_US&quot; / &quot;de_DE&quot;</span></span></code></pre></div><h3 id="editing-messages-safely" tabindex="-1">Editing messages safely <a class="header-anchor" href="#editing-messages-safely" aria-label="Permalink to &quot;Editing messages safely&quot;">​</a></h3><ul><li>Format: Messages use MiniMessage formatting (Velocity). You can use colors, bold, and simple tags like <code>&lt;green&gt;</code>, <code>&lt;bold&gt;</code>, etc.</li><li>Placeholders: Some messages include placeholders like <code>&lt;server&gt;</code>, <code>&lt;time&gt;</code>, <code>&lt;player&gt;</code>, <code>&lt;reason&gt;</code>. Keep these placeholders intact or your message may miss important data.</li><li>Multi-line: YAML strings can be quoted or written as | block scalars if you prefer multi-line text.</li></ul><div class="tip custom-block"><p class="custom-block-title">Quick reload</p><p>After editing files in plugins/VelocityPteroPower/messages/, run /ptero reload to apply changes without restarting Velocity.</p></div><h3 id="adding-a-new-language" tabindex="-1">Adding a new language <a class="header-anchor" href="#adding-a-new-language" aria-label="Permalink to &quot;Adding a new language&quot;">​</a></h3><ol><li>Copy en_US.yml to a new file named with your locale code (for example fr_FR.yml).</li><li>Translate the values on the right-hand side, keeping any placeholders (e.g., <code>&lt;server&gt;</code>) unchanged.</li><li>Set languageOverride: fr_FR (or leave auto if your environment uses that locale).</li></ol><h3 id="keeping-up-with-updates" tabindex="-1">Keeping up with updates <a class="header-anchor" href="#keeping-up-with-updates" aria-label="Permalink to &quot;Keeping up with updates&quot;">​</a></h3><ul><li>When VPP adds new messages in updates, compare your custom file with the latest en_US.yml and add missing keys.</li><li>If a key is removed upstream, keeping it in your custom file won’t break anything, but it will no longer be used.</li><li>If a message doesn’t exist in your file, VPP uses the en_US default for that key.</li></ul>`,116)]))}const g=i(l,[["render",t]]);export{k as __pageData,g as default};
