import{_ as o,c as t,o as s,ag as a}from"./chunks/framework.BDwTZuFy.js";const m=JSON.parse('{"title":"Commands Reference ðŸ’»","description":"","frontmatter":{},"headers":[],"relativePath":"tubs-statusplugin/latest/commands.md","filePath":"tubs-statusplugin/latest/commands.md"}'),l={name:"tubs-statusplugin/latest/commands.md"};function i(r,e,n,d,c,u){return s(),t("div",null,e[0]||(e[0]=[a('<h1 id="commands-reference-ðŸ’»" tabindex="-1">Commands Reference ðŸ’» <a class="header-anchor" href="#commands-reference-ðŸ’»" aria-label="Permalink to &quot;Commands Reference ðŸ’»&quot;">â€‹</a></h1><p>Tub&#39;s Status Plugin uses the base command <code>/status</code>. The <code>/group</code> command is also available when <code>groupMode</code> is enabled.</p><div class="tip custom-block"><p class="custom-block-title">Permissions</p><p>Command access is governed by permissions. Players will only see commands they have permission for when using <code>/status help</code>.</p></div><h2 id="status-command" tabindex="-1"><code>/status</code> Command <a class="header-anchor" href="#status-command" aria-label="Permalink to &quot;`/status` Command&quot;">â€‹</a></h2><ul><li><strong>Aliases:</strong> None by default.</li></ul><h3 id="subcommands-for-status" tabindex="-1">Subcommands for <code>/status</code>: <a class="header-anchor" href="#subcommands-for-status" aria-label="Permalink to &quot;Subcommands for `/status`:&quot;">â€‹</a></h3><ul><li><h4 id="status-message" tabindex="-1"><code>/status &lt;message&gt;</code> <a class="header-anchor" href="#status-message" aria-label="Permalink to &quot;`/status &lt;message&gt;`&quot;">â€‹</a></h4><ul><li><strong>Description:</strong> Sets your own status to the provided <code>&lt;message&gt;</code>.</li><li><strong>Permission:</strong> <code>StatusPlugin.setStatus</code> (Default: <code>true</code>)</li><li><strong>Usage Example:</strong> <code>/status &amp;aOnline and Happy!</code></li><li><strong>Notes:</strong><ul><li>Use <code>&amp;_</code> for spaces if needed (e.g., <code>/status Hello&amp;_World</code>).</li><li>Color/formatting codes (e.g., <code>&amp;a</code>, <code>&amp;l</code>) require corresponding <code>StatusPlugin.formatting.&lt;type&gt;</code> permissions.</li><li>Subject to <code>maxStatusLength</code> from <code>config.yml</code>.</li><li>Disabled if <code>groupMode: true</code> in <code>config.yml</code> (use <code>/group</code> instead).</li></ul></li></ul></li><li><h4 id="status-player-message" tabindex="-1"><code>/status &lt;player&gt; &lt;message&gt;</code> <a class="header-anchor" href="#status-player-message" aria-label="Permalink to &quot;`/status &lt;player&gt; &lt;message&gt;`&quot;">â€‹</a></h4><ul><li><strong>Description:</strong> Sets the status of another <code>&lt;player&gt;</code> to <code>&lt;message&gt;</code>.</li><li><strong>Permission:</strong> <code>StatusPlugin.admin.setStatus</code> (Default: <code>op</code>)</li><li><strong>Usage Example:</strong> <code>/status Notch Server Admin</code></li></ul></li><li><h4 id="status-remove-player" tabindex="-1"><code>/status remove [player]</code> <a class="header-anchor" href="#status-remove-player" aria-label="Permalink to &quot;`/status remove [player]`&quot;">â€‹</a></h4><ul><li><strong>Description:</strong> Removes a status.</li><li><strong>Permission:</strong><ul><li>To remove your own status (<code>/status remove</code>): <code>StatusPlugin.setStatus</code> (Default: <code>true</code>)</li><li>To remove another player&#39;s status (<code>/status remove &lt;player&gt;</code>): <code>StatusPlugin.admin.setStatus</code> (Default: <code>op</code>)</li></ul></li><li><strong>Usage Examples:</strong><ul><li><code>/status remove</code> (removes your own status)</li><li><code>/status remove Herobrine</code> (removes Herobrine&#39;s status)</li></ul></li></ul></li><li><h4 id="status-reload" tabindex="-1"><code>/status reload</code> <a class="header-anchor" href="#status-reload" aria-label="Permalink to &quot;`/status reload`&quot;">â€‹</a></h4><ul><li><strong>Description:</strong> Reloads the plugin&#39;s <code>config.yml</code> and <code>statuses.yml</code> files.</li><li><strong>Permission:</strong> <code>StatusPlugin.admin.reload</code> (Default: <code>op</code>)</li><li><strong>Usage:</strong> <code>/status reload</code></li><li><strong>Notes:</strong> Can be executed from the console.</li></ul></li><li><h4 id="status-help-colors-colorcodes" tabindex="-1"><code>/status help [colors|colorcodes]</code> <a class="header-anchor" href="#status-help-colors-colorcodes" aria-label="Permalink to &quot;`/status help [colors|colorcodes]`&quot;">â€‹</a></h4><ul><li><strong>Description:</strong> Displays help information. <ul><li><code>/status help</code>: Shows available commands for the user.</li><li><code>/status help colors</code> or <code>/status help colorcodes</code>: Shows a list of Minecraft color and formatting codes.</li></ul></li><li><strong>Permission:</strong> None explicitly defined for <code>/status help</code> itself (implicitly accessible if any other <code>/status</code> subcommand is). Access to see all commands in help depends on individual permissions.</li><li><strong>Usage Examples:</strong><ul><li><code>/status help</code></li><li><code>/status help colors</code></li></ul></li></ul></li><li><h4 id="status-setmaxlength-length" tabindex="-1"><code>/status setmaxlength &lt;length&gt;</code> <a class="header-anchor" href="#status-setmaxlength-length" aria-label="Permalink to &quot;`/status setmaxlength &lt;length&gt;`&quot;">â€‹</a></h4><ul><li><strong>Description:</strong> Sets the maximum allowed character length for statuses (ignoring color codes and placeholders).</li><li><strong>Permission:</strong> <code>StatusPlugin.admin.setMaxlength</code> (Default: <code>op</code>)</li><li><strong>Arguments:</strong><ul><li><code>&lt;length&gt;</code>: (Required) A positive integer.</li></ul></li><li><strong>Usage Example:</strong> <code>/status setmaxlength 20</code></li></ul></li><li><h4 id="status-resetmaxlength" tabindex="-1"><code>/status resetmaxlength</code> <a class="header-anchor" href="#status-resetmaxlength" aria-label="Permalink to &quot;`/status resetmaxlength`&quot;">â€‹</a></h4><ul><li><strong>Description:</strong> Resets the maximum status length to its default value (15).</li><li><strong>Permission:</strong> <code>StatusPlugin.admin.resetMaxlength</code> (Default: <code>op</code>)</li><li><strong>Usage:</strong> <code>/status resetmaxlength</code></li></ul></li><li><h4 id="status-info" tabindex="-1"><code>/status info</code> <a class="header-anchor" href="#status-info" aria-label="Permalink to &quot;`/status info`&quot;">â€‹</a></h4><ul><li><strong>Description:</strong> Displays information about the Tub&#39;s Status Plugin, including version, author, and support links. May also show update availability if <code>checkUpdate: true</code>.</li><li><strong>Permission:</strong> None explicitly defined (implicitly accessible).</li><li><strong>Usage:</strong> <code>/status info</code></li></ul></li><li><h4 id="status-group-groupname" tabindex="-1"><code>/status group &lt;groupname&gt;</code> <a class="header-anchor" href="#status-group-groupname" aria-label="Permalink to &quot;`/status group &lt;groupname&gt;`&quot;">â€‹</a></h4><ul><li><strong>Description:</strong> Sets your status to one of the predefined groups if <code>groupMode: true</code> is enabled in <code>config.yml</code>.</li><li><strong>Permission:</strong> <code>StatusPlugin.group.set</code> (Default: <code>true</code>) and <code>StatusPlugin.group.set.&lt;groupname&gt;</code> for the specific group.</li><li><strong>Usage Example:</strong> <code>/status group afk</code></li><li><strong>Note:</strong> This is an alternative to <code>/group &lt;groupname&gt;</code>.</li></ul></li></ul><h2 id="group-command" tabindex="-1"><code>/group</code> Command <a class="header-anchor" href="#group-command" aria-label="Permalink to &quot;`/group` Command&quot;">â€‹</a></h2><ul><li><strong>Aliases:</strong> None by default.</li><li><strong>Description:</strong> Sets your status to one of the predefined groups. Only functional if <code>groupMode: true</code> is enabled in <code>config.yml</code>.</li><li><strong>Permission:</strong> <code>StatusPlugin.group.set</code> (Default: <code>true</code>) and <code>StatusPlugin.group.set.&lt;groupname&gt;</code> for the specific group.</li><li><strong>Usage:</strong> <code>/group &lt;groupname&gt;</code><ul><li><code>&lt;groupname&gt;</code>: (Required) The key of a group defined in the <code>statusGroups</code> section of <code>config.yml</code>.</li></ul></li><li><strong>Example:</strong> <code>/group t1</code> (if <code>t1</code> is a defined group)</li></ul>',9)]))}const p=o(l,[["render",i]]);export{m as __pageData,p as default};
