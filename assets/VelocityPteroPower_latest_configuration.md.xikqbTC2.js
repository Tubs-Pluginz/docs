import{_ as s,c as i,o as t,ag as a}from"./chunks/framework.BDwTZuFy.js";const g=JSON.parse('{"title":"VPP config","description":"","frontmatter":{"title":"VPP config","sidebar":true},"headers":[],"relativePath":"VelocityPteroPower/latest/configuration.md","filePath":"VelocityPteroPower/latest/configuration.md"}'),n={name:"VelocityPteroPower/latest/configuration.md"};function o(l,e,r,h,c,d){return t(),i("div",null,e[0]||(e[0]=[a(`<h1 id="configuration-guide-⚙️" tabindex="-1">Configuration Guide ⚙️ <a class="header-anchor" href="#configuration-guide-⚙️" aria-label="Permalink to &quot;Configuration Guide ⚙️&quot;">​</a></h1><p>The main configuration for VelocityPteroPower is located in the <code>config.yml</code> file within the <code>plugins/VelocityPteroPower/</code> folder. This file is automatically generated with default values the first time you run the plugin.</p><div class="tip custom-block"><p class="custom-block-title">Always Backup!</p><p>Before making significant changes to your configuration, it&#39;s always a good practice to create a backup of your <code>config.yml</code> file.</p></div><p>This guide explains each configuration option available.</p><hr><h2 id="general-settings" tabindex="-1">General Settings <a class="header-anchor" href="#general-settings" aria-label="Permalink to &quot;General Settings&quot;">​</a></h2><h3 id="fileversion" tabindex="-1"><code>fileversion</code> <a class="header-anchor" href="#fileversion" aria-label="Permalink to &quot;\`fileversion\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Internal version number for the configuration file. This is used by the plugin to automatically manage updates to the config structure between plugin versions.</li><li><strong>Action:</strong> <strong>Do not change this value manually.</strong></li><li><strong>Default:</strong> (Automatically set by the plugin, e.g., <code>8</code>)</li></ul><h3 id="checkupdate" tabindex="-1"><code>checkUpdate</code> <a class="header-anchor" href="#checkupdate" aria-label="Permalink to &quot;\`checkUpdate\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>true</code>, the plugin will check for new versions of VelocityPteroPower on startup. If an update is found, a message will be displayed in the console.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>true</code></li><li><strong>Example:</strong> <code>checkUpdate: true</code></li></ul><h3 id="loggerlevel" tabindex="-1"><code>loggerLevel</code> <a class="header-anchor" href="#loggerlevel" aria-label="Permalink to &quot;\`loggerLevel\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Controls the verbosity of messages logged by VelocityPteroPower to the Velocity console.</li><li><strong>Type:</strong> <code>Integer</code></li><li><strong>Accepted Values:</strong><ul><li><code>10</code>: DEBUG (Most detailed information, useful for troubleshooting issues)</li><li><code>20</code>: INFO (Standard operational messages, recommended for production)</li><li><code>30</code>: WARNING (Potential issues or non-critical errors)</li><li><code>40</code>: ERROR (Critical errors that may impair functionality)</li></ul></li><li><strong>Default:</strong> <code>20</code></li><li><strong>Example:</strong> <code>loggerLevel: 20</code><div class="tip custom-block"><p class="custom-block-title">For Troubleshooting</p><p>When reporting issues, setting <code>loggerLevel: 10</code> can provide valuable diagnostic information. Remember to set it back to <code>20</code> for normal operation to avoid excessive console spam.</p></div></li></ul><h3 id="apithreads" tabindex="-1"><code>apiThreads</code> <a class="header-anchor" href="#apithreads" aria-label="Permalink to &quot;\`apiThreads\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The number of threads allocated in a dedicated thread pool for handling asynchronous API requests to your panel. Increasing this <em>might</em> improve responsiveness if you manage a very large number of servers and experience API-related delays, but it also consumes more system resources.</li><li><strong>Type:</strong> <code>Integer</code></li><li><strong>Default:</strong> <code>10</code></li><li><strong>Action:</strong> Changes to this value require a full restart of the Velocity proxy.</li><li><strong>Example:</strong> <code>apiThreads: 10</code></li></ul><h3 id="printratelimit" tabindex="-1"><code>printRateLimit</code> <a class="header-anchor" href="#printratelimit" aria-label="Permalink to &quot;\`printRateLimit\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>true</code>, the plugin will log information about the current API rate limit status (limit, remaining requests) received from the panel after API calls. This is useful for diagnosing if API rate limiting is affecting the plugin&#39;s operation.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>false</code></li><li><strong>Example:</strong> <code>printRateLimit: false</code></li></ul><hr><h2 id="server-status-behavior" tabindex="-1">Server Status &amp; Behavior <a class="header-anchor" href="#server-status-behavior" aria-label="Permalink to &quot;Server Status &amp; Behavior&quot;">​</a></h2><h3 id="serverstatuscheckmethod" tabindex="-1"><code>serverStatusCheckMethod</code> <a class="header-anchor" href="#serverstatuscheckmethod" aria-label="Permalink to &quot;\`serverStatusCheckMethod\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Determines how VPP checks if a managed Minecraft server is online and ready.</li><li><strong>Type:</strong> <code>String</code></li><li><strong>Accepted Values:</strong><ul><li><code>&quot;VELOCITY_PING&quot;</code>: Uses Velocity&#39;s built-in server pinging mechanism. <ul><li><strong>Pros:</strong> Less resource-intensive on the panel API; doesn&#39;t consume API rate limit quotas.</li><li><strong>Cons:</strong> Requires the server to be correctly registered in <code>velocity.toml</code> and network-accessible from the proxy. Might report a server as &quot;online&quot; slightly before it&#39;s fully joinable (e.g., before all backend plugins load). Some very minimal limbo servers might not respond to pings correctly.</li></ul></li><li><code>&quot;PANEL_API&quot;</code>: Directly queries the Pterodactyl/Pelican/MC Server Soft panel API for the server&#39;s current state (e.g., &quot;running&quot;, &quot;offline&quot;). <ul><li><strong>Pros:</strong> Generally more accurate regarding the <em>actual</em> state of the server process as reported by the panel.</li><li><strong>Cons:</strong> Uses an API request for each check, contributing to rate limit usage. Can be slightly slower due to API call latency.</li></ul></li></ul></li><li><strong>Default:</strong> <code>&quot;VELOCITY_PING&quot;</code></li><li><strong>Example:</strong> <code>serverStatusCheckMethod: &quot;VELOCITY_PING&quot;</code></li></ul><h3 id="pingtimeout" tabindex="-1"><code>pingTimeout</code> <a class="header-anchor" href="#pingtimeout" aria-label="Permalink to &quot;\`pingTimeout\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>serverStatusCheckMethod</code> is set to <code>&quot;VELOCITY_PING&quot;</code>, this is the maximum time (in milliseconds) VPP will wait for a ping response from a backend server before considering it offline or unreachable.</li><li><strong>Type:</strong> <code>Integer</code> (milliseconds)</li><li><strong>Default:</strong> <code>1000</code> (1 second)</li><li><strong>Example:</strong> <code>pingTimeout: 1000</code></li></ul><h3 id="shutdownretries" tabindex="-1"><code>shutdownRetries</code> <a class="header-anchor" href="#shutdownretries" aria-label="Permalink to &quot;\`shutdownRetries\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If VPP sends a &quot;stop&quot; signal to a server and the server doesn&#39;t appear to shut down (based on subsequent status checks), VPP will retry sending the &quot;stop&quot; signal this many times.</li><li><strong>Type:</strong> <code>Integer</code></li><li><strong>Default:</strong> <code>3</code></li><li><strong>Example:</strong> <code>shutdownRetries: 3</code></li></ul><h3 id="shutdownretrydelay" tabindex="-1"><code>shutdownRetryDelay</code> <a class="header-anchor" href="#shutdownretrydelay" aria-label="Permalink to &quot;\`shutdownRetryDelay\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The time (in seconds) VPP will wait between failed shutdown attempts before retrying.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default:</strong> <code>300</code> (5 minutes)</li><li><strong>Example:</strong> <code>shutdownRetryDelay: 300</code></li></ul><h3 id="idlestartshutdowntime" tabindex="-1"><code>idleStartShutdownTime</code> <a class="header-anchor" href="#idlestartshutdowntime" aria-label="Permalink to &quot;\`idleStartShutdownTime\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If a server is started by VPP (either by a player connecting or via command) but no player successfully joins it within this duration (in seconds), VPP will automatically shut it down. This prevents servers from staying online indefinitely if they were started but never actually used.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Set to <code>-1</code> to disable this feature.</strong></li><li><strong>Default:</strong> <code>300</code> (5 minutes)</li><li><strong>Example:</strong> <code>idleStartShutdownTime: 300</code></li></ul><h3 id="playerstartcooldown" tabindex="-1"><code>playerStartCooldown</code> <a class="header-anchor" href="#playerstartcooldown" aria-label="Permalink to &quot;\`playerStartCooldown\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The cooldown period (in seconds) a player must wait before they can initiate the start of another server, does not work for the <code>/ptero start</code> command.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default:</strong> <code>10</code></li><li><strong>Example:</strong> <code>playerStartCooldown: 10</code></li></ul><h3 id="limboserver" tabindex="-1"><code>limboServer</code> <a class="header-anchor" href="#limboserver" aria-label="Permalink to &quot;\`limboServer\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The name of a server (as defined in your <code>velocity.toml</code>) to which players will be temporarily redirected while their target VPP-managed server is starting up. This provides a waiting area instead of disconnecting the player.</li><li><strong>Type:</strong> <code>String</code></li><li><strong>Action:</strong> If set to <code>&quot;changeMe&quot;</code> or an invalid/unregistered server name, the limbo functionality is effectively disabled, and players might be disconnected if their target server is offline.</li><li><strong>Default:</strong> <code>&quot;changeMe&quot;</code></li><li><strong>Example:</strong> <code>limboServer: &quot;lobby&quot;</code><div class="tip custom-block"><p class="custom-block-title">Limbo Server Considerations</p><ul><li>The limbo server should be lightweight and always accessible.</li><li>If the limbo server itself is managed by VPP, ensure its <code>timeout</code> setting (in the <code>servers</code> section) is configured appropriately (e.g., <code>-1</code> to prevent auto-shutdown, or a very short timeout if it&#39;s designed to be ephemeral but quick to start).</li></ul></div></li></ul><h3 id="startupinitialcheckdelay" tabindex="-1"><code>startupInitialCheckDelay</code> <a class="header-anchor" href="#startupinitialcheckdelay" aria-label="Permalink to &quot;\`startupInitialCheckDelay\`&quot;">​</a></h3><ul><li><strong>Description:</strong> After VPP sends a &quot;start&quot; signal to a server, it will wait this many seconds before performing the <em>first</em> status check to see if the server has come online.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default:</strong> <code>10</code></li><li><strong>Example:</strong> <code>startupInitialCheckDelay: 10</code><div class="info custom-block"><p class="custom-block-title">Note</p><p>The per-server <code>startupJoinDelay</code> is applied <em>after</em> this initial check confirms the server is online, before a player is connected.</p></div></li></ul><h3 id="stopidleignore" tabindex="-1"><code>stopIdleIgnore</code> <a class="header-anchor" href="#stopidleignore" aria-label="Permalink to &quot;\`stopIdleIgnore\`&quot;">​</a></h3><ul><li><strong>Description:</strong> A list of server names (as defined in <code>velocity.toml</code> and VPP&#39;s <code>servers</code> section) that will be ignored by the <code>/ptero stopidle</code> command. These servers will not be shut down by this specific command even if they are empty.</li><li><strong>Type:</strong> <code>List</code> of <code>String</code></li><li><strong>Default:</strong> <code>[&quot;hub&quot;, &quot;lobby&quot;, &quot;limbo&quot;]</code></li><li><strong>Example:</strong><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">stopIdleIgnore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lobby1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lobby2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hub</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Important</p><p>This list <strong>only</strong> affects the <code>/ptero stopidle</code> command. It does <strong>not</strong> prevent automatic shutdown based on a server&#39;s <code>timeout</code> setting or the global <code>idleStartShutdownTime</code>. It also does not affect the <code>/ptero forcestopall</code> command.</p></div></li></ul><h3 id="servernotfoundmessage" tabindex="-1"><code>serverNotFoundMessage</code> <a class="header-anchor" href="#servernotfoundmessage" aria-label="Permalink to &quot;\`serverNotFoundMessage\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>true</code>, when a player attempts to connect to a server name that is registered in <code>velocity.toml</code> but <em>not</em> configured in VPP&#39;s <code>servers</code> section, the player will receive a &quot;server not found in configuration&quot; message. A message is always logged to the console regardless of this setting.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>false</code></li><li><strong>Example:</strong> <code>serverNotFoundMessage: false</code></li></ul><hr><h2 id="whitelist-settings" tabindex="-1">Whitelist Settings <a class="header-anchor" href="#whitelist-settings" aria-label="Permalink to &quot;Whitelist Settings&quot;">​</a></h2><h3 id="whitelistallowbypass" tabindex="-1"><code>whitelistAllowBypass</code> <a class="header-anchor" href="#whitelistallowbypass" aria-label="Permalink to &quot;\`whitelistAllowBypass\`&quot;">​</a></h3><ul><li><strong>Description:</strong> If <code>true</code>, players with the <code>ptero.bypass</code> permission can bypass VPP&#39;s whitelist check when attempting to start/connect to a server that has <code>whitelist: true</code> in its per-server configuration.</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>true</code></li><li><strong>Example:</strong> <code>whitelistAllowBypass: true</code><div class="danger custom-block"><p class="custom-block-title">Important Distinction</p><p>This setting only bypasses VPP&#39;s <em>pre-connection check</em>. It does <strong>not</strong> allow players to bypass the actual <code>whitelist.json</code> enforced by the backend Minecraft server itself. If a player bypasses VPP&#39;s check but is not on the backend server&#39;s whitelist, they will still be unable to join.</p></div></li></ul><h3 id="whitelistcheckinterval" tabindex="-1"><code>whitelistCheckInterval</code> <a class="header-anchor" href="#whitelistcheckinterval" aria-label="Permalink to &quot;\`whitelistCheckInterval\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The interval (in minutes) at which VPP will periodically attempt to re-fetch the <code>whitelist.json</code> file from servers that have <code>whitelist: true</code> configured. This helps keep VPP&#39;s internal whitelist cache up-to-date.</li><li><strong>Type:</strong> <code>Integer</code> (minutes)</li><li><strong>Set to <code>0</code> or a negative value to disable periodic automatic updates.</strong> Whitelists will still be fetched on plugin load/reload and via <code>/ptero whitelistReload</code>.</li><li><strong>Default:</strong> <code>10</code></li><li><strong>Example:</strong> <code>whitelistCheckInterval: 10</code><div class="warning custom-block"><p class="custom-block-title">MC Server Soft Limitation</p><p>The whitelist fetching feature (and thus this interval) is <strong>not supported</strong> if your panel is MC Server Soft due to API differences.</p></div></li></ul><hr><h2 id="panel-connection-pterodactyl" tabindex="-1">Panel Connection (<code>pterodactyl</code>) <a class="header-anchor" href="#panel-connection-pterodactyl" aria-label="Permalink to &quot;Panel Connection (\`pterodactyl\`)&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This section of the config is still named <code>pterodactyl</code> for compatibility reasons, even if you are using Pelican or MC Server Soft. The plugin will automatically detect the panel type based on the API key format.</p></div><p>This section contains the crucial details for connecting to your panel url.</p><h3 id="pterodactyl-url" tabindex="-1"><code>pterodactyl.url</code> <a class="header-anchor" href="#pterodactyl-url" aria-label="Permalink to &quot;\`pterodactyl.url\`&quot;">​</a></h3><ul><li><strong>Description:</strong> The full base URL of your panel.</li><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> Yes</li><li><strong>Format:</strong> Must include the protocol (<code>http://</code> or <code>https://</code>). It&#39;s generally recommended to ensure it ends with a <code>/</code> if your panel requires it for API access (most do).</li><li><strong>Example:</strong> <code>url: &quot;https://panel.yourdomain.com/&quot;</code><div class="tip custom-block"><p class="custom-block-title">Cloudflare &amp; Proxies</p><p>If you are using Cloudflare, a reverse proxy, or a tunnel in front of your panel, ensure that the URL points to the accessible endpoint and that any necessary IP bypass or security rules are configured to allow VPP to reach the API.</p></div></li></ul><h3 id="pterodactyl-apikey" tabindex="-1"><code>pterodactyl.apiKey</code> <a class="header-anchor" href="#pterodactyl-apikey" aria-label="Permalink to &quot;\`pterodactyl.apiKey\`&quot;">​</a></h3><ul><li><strong>Description:</strong> Your Client API Key for the panel.</li><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> Yes</li><li><strong>Format:</strong><ul><li>For <strong>Pterodactyl Panel</strong>: The key should start with <code>ptlc_</code>.</li><li>For <strong>Pelican Panel</strong>: The key should start with <code>plcn_</code>.</li></ul></li><li><strong>Location:</strong> You can generate/find this key in your account settings on the panel, usually under &quot;API Credentials&quot; or a similar section.</li><li><strong>Example:</strong> <code>apiKey: &quot;ptlc_YOUR_CLIENT_API_KEY_HERE&quot;</code><div class="danger custom-block"><p class="custom-block-title">Critical: Use Client API Keys Only!</p><p>You <strong>must</strong> use a <strong>Client API Key</strong>. Application API Keys (which might start with <code>ptla_</code> for Pterodactyl or <code>peli_</code> for Pelican) are <strong>NOT supported</strong> by VPP and will result in connection failures. The Client API Key grants permissions on behalf of your user account.</p><div class="info custom-block"><p class="custom-block-title">Information for MC Server Soft Users</p><p>Mc Server Soft doesnt have any kind of distinction between types of Api Keys. There is just one type.</p></div></div></li></ul><hr><h2 id="per-server-configuration-servers" tabindex="-1">Per-Server Configuration (<code>servers</code>) <a class="header-anchor" href="#per-server-configuration-servers" aria-label="Permalink to &quot;Per-Server Configuration (\`servers\`)&quot;">​</a></h2><p>This section is where you define each individual Minecraft server that VelocityPteroPower should manage. Each entry is a sub-section named after the server as it appears in your <code>velocity.toml</code>.</p><h3 id="servers-servername" tabindex="-1"><code>servers.&lt;serverName&gt;</code> <a class="header-anchor" href="#servers-servername" aria-label="Permalink to &quot;\`servers.&lt;serverName&gt;\`&quot;">​</a></h3><ul><li><p><strong>Description:</strong> This is the block for a specific server. Replace <code>&lt;serverName&gt;</code> with the actual name of your server (e.g., <code>lobby</code>, <code>survival</code>, <code>minigames</code>). This name <strong>must exactly match</strong> the server name defined in your Velocity <code>velocity.toml</code> file (case-sensitive).</p><p>Inside each <code>&lt;serverName&gt;</code> block, you define the following:</p><h4 id="id" tabindex="-1"><code>id</code> <a class="header-anchor" href="#id" aria-label="Permalink to &quot;\`id\`&quot;">​</a></h4><ul><li><strong>Description:</strong> The unique identifier of this server <em>on your panel</em>.</li><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> Yes</li><li><strong>How to find:</strong><ul><li><strong>Pterodactyl:</strong> Look at the URL when viewing the server in the panel. If the URL is <code>https://panel.example.com/server/a1b2c3d4</code>, then the ID is <code>a1b2c3d4</code>.</li><li><strong>Pelican:</strong> This is typically the &quot;Short UUID&quot; found in the server&#39;s details page on the panel.</li></ul></li><li><strong>Example:</strong> <code>id: &quot;a1b2c3d4&quot;</code></li></ul><h4 id="timeout" tabindex="-1"><code>timeout</code> <a class="header-anchor" href="#timeout" aria-label="Permalink to &quot;\`timeout\`&quot;">​</a></h4><ul><li><strong>Description:</strong> The time (in seconds) VPP will wait after the last player leaves this specific server before automatically sending a &quot;stop&quot; signal.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Set to <code>-1</code> to disable automatic shutdown for this server when it becomes empty.</strong></li><li><strong>Set to <code>0</code> to attempt to stop the server immediately after the last player leaves.</strong></li><li><strong>Default (if not specified for a server, though it&#39;s good practice to specify):</strong> The plugin might have an internal default, but explicitly set it.</li><li><strong>Example:</strong> <code>timeout: 300</code> (5 minutes)</li></ul><h4 id="startupjoindelay" tabindex="-1"><code>startupJoinDelay</code> <a class="header-anchor" href="#startupjoindelay" aria-label="Permalink to &quot;\`startupJoinDelay\`&quot;">​</a></h4><ul><li><strong>Description:</strong> After VPP detects that this server has successfully started and is &quot;online&quot; (according to <code>serverStatusCheckMethod</code>), it will wait an additional period (in seconds) defined by this value before attempting to connect waiting players to it. This delay allows backend server plugins and worlds to fully load and initialize.</li><li><strong>Type:</strong> <code>Integer</code> (seconds)</li><li><strong>Default (if not specified):</strong> <code>10</code> (as seen in the example config)</li><li><strong>Example:</strong> <code>startupJoinDelay: 15</code> (wait 15 seconds after server reports online)</li></ul><h4 id="whitelist" tabindex="-1"><code>whitelist</code> <a class="header-anchor" href="#whitelist" aria-label="Permalink to &quot;\`whitelist\`&quot;">​</a></h4><ul><li><strong>Description:</strong> If <code>true</code>, VPP will attempt to fetch the <code>whitelist.json</code> file for this server from the panel and enforce it for players attempting to start or connect to this server (unless bypassed by permission).</li><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Default:</strong> <code>false</code></li><li><strong>Example:</strong> <code>whitelist: true</code><div class="warning custom-block"><p class="custom-block-title">MC Server Soft Limitation</p><p>As mentioned previously, the whitelist fetching feature is <strong>not supported</strong> if your panel is MC Server Soft. Setting this to <code>true</code> for an MC Server Soft panel will likely result in VPP logging warnings and the whitelist check being ineffective.</p></div></li></ul></li></ul><hr><details class="details custom-block"><summary>Example <code>config.yml</code> (fileversion: 8)</summary><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#      VelocityPteroPower      #</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#         by TubYoub           #</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">################################</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Version of the configuration file</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">fileversion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check for updates</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">checkUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Choose which logging level should be used</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 10 = Debug, 20 = Info, 30 = Warning, 40 = Error</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">loggerLevel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How many Threads should be used for API requests</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiThreads</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Print updated Rate Limit from the API response to console</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">printRateLimit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Choose the method to check if a managed server is online</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &quot;VELOCITY_PING&quot; or &quot;PANEL_API&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">serverStatusCheckMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;VELOCITY_PING&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Timeout for VELOCITY_PING (in milliseconds)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pingTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Retries for shutdown if previous failed</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">shutdownRetries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Delay before retrying shutdown (in seconds)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">shutdownRetryDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Time before shutting down a server if no player joined after start (in seconds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -1 = disabled</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">idleStartShutdownTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Cooldown for players starting a server (in seconds)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">playerStartCooldown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Limbo server name (from velocity.toml)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &quot;changeMe&quot; = disabled</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">limboServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">changeMe</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Initial delay before first online check after starting a server (in seconds)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">startupInitialCheckDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Servers to ignore for /ptero stopIdle command</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">stopIdleIgnore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hub</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lobby</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">limbo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Send message to player if server not in VPP config</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">serverNotFoundMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Allow players with ptero.bypass to bypass VPP&#39;s whitelist check</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">whitelistAllowBypass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Interval for periodic whitelist checks (in minutes)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 0 or less = disabled</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">whitelistCheckInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Panel configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pterodactyl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://panel.example.com/&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  apiKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ptlc_000000000000000000000000000000000000000000&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Per server configuration</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Server names must match velocity.toml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  lobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example server 1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a1b2c3d4&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Never auto-stop lobby</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    startupJoinDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    whitelist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  survival</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example server 2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;e5f6g7h8&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Stop after 10 minutes empty</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    startupJoinDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    whitelist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  minigame-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example server 3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i9j0k1l2&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Stop after 2 minutes empty</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    startupJoinDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    whitelist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div></details>`,59)]))}const u=s(n,[["render",o]]);export{g as __pageData,u as default};
